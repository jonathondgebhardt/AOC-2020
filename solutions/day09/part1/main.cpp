#include <day09/Utilities.ipp>

// File auto-generated by StartNewDay

int main(int argc, char* argv[])
{
  const auto fileName = util::GetInputFile("day09.txt");
  const auto contents = util::Parse(fileName);

  std::vector<util::day09::NumberType> numbers;
  std::transform(
      contents.begin(), contents.end(), std::back_inserter(numbers),
      [](const std::string& x) { return util::StringTo<util::day09::NumberType>(x).value(); });

  constexpr size_t preambleLength = 25;
  std::optional<util::day09::NumberType> answer;
  for(size_t i = preambleLength; i < numbers.size() && !answer.has_value(); ++i)
  {
    auto preamble = util::day09::GetPreamble(numbers, preambleLength, i - preambleLength);
    auto number = numbers[i];

    if(!util::day09::GetCanFindSum(number, preamble))
    {
      answer = number;
    }
  }

  std::cout << answer.value_or(-1) << "\n";

  return EXIT_SUCCESS;
}
