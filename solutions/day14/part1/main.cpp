#include <day14/Utilities.ipp>

// File auto-generated by StartNewDay

struct MaskingStrategy_Part1 : util::day14::MaskingStrategy
{
  MaskingStrategy_Part1(const std::string& mask) : util::day14::MaskingStrategy(mask) {}

  void writeWordToMemory(util::day14::Word& word,
                         std::unordered_map<int64_t, util::day14::Word>& memory)
  {
    for(size_t i = 0; i < word.value.size(); ++i)
    {
      if(this->mask[i] != 'X')
      {
        word.value[i] = this->mask[i];
      }
    }

    memory[word.location] = word;
  }
};

int main(int argc, char* argv[])
{
  const auto inputFile = util::GetInputFile("day14.txt");
  const auto contents = util::Parse(inputFile);

  util::day14::Program<MaskingStrategy_Part1> p;
  p.execute(contents);

  std::cout << p.sumMemory() << "\n";

  return EXIT_SUCCESS;
}
